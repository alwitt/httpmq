# Copyright 2021-2022 The httpmq Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CICD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  golint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: golint
        uses: Jerome1337/golint-action@v1.0.2
        with:
          golint-path: "./..."

  golangci-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

  test:
    runs-on: ubuntu-latest

    services:
      nats:
        image: alwitt/nats-js:2.6.2-alpine
        ports:
          - 4222:4222

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build
        run: go build -v -o httpmq.bin .

      - name: Test
        run: go test --count 1 -timeout 30s -short ./...
        env:
          NATS_HOST: localhost
          NATS_PORT: ${{ job.services.nats.ports[4222] }}

  docker:
    runs-on: ubuntu-latest

    env:
      IMAGE_REPO: alwitt/httpmq
      IMAGE_TAG: "0.2.2"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to Docker Hub for only main branch
        uses: docker/build-push-action@v2
        with:
          context: ./
          tags: |
            ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}
          push: ${{ github.ref == 'refs/heads/main' }}

      # - name: Build management API specific image and push to Docker Hub for only main branch
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./docker/Dockerfile.management-api
      #     tags: |
      #       ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}-management
      #     build-args: |
      #       BASE_IMG=${{ env.IMAGE_REPO }}
      #       BASE_IMG_TAG=${{ env.IMAGE_TAG }}
      #     push: ${{ github.ref == 'refs/heads/main' }}

      # - name: Build dataplane API specific image and push to Docker Hub for only main branch
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./docker/Dockerfile.dataplane-api
      #     tags: |
      #       ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}-dataplane
      #     build-args: |
      #       BASE_IMG=${{ env.IMAGE_REPO }}
      #       BASE_IMG_TAG=${{ env.IMAGE_TAG }}
      #     push: ${{ github.ref == 'refs/heads/main' }}
